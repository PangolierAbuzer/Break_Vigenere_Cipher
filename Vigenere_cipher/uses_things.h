#ifndef INC_190928_UNIVERSITY_USES_THINGS_H
#define INC_190928_UNIVERSITY_USES_THINGS_H
#define TYPE_NAME(x) typeid(x).name()

#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <typeinfo>

using namespace std;


//................................................ВАРИАНТ_17.........................................................


vector<char> alphabet = {
        'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м',
        'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ',
        'ы', 'ь', 'э', 'ю', 'я', ' ', ',', '.' };


string msg = R"(к.аижтъе.риёвмщужйяээмфуннолемщукпгдёфцшырйр.шьвизилдпувлнппжсзвоёгэиюьсдррнщмшчмссмыфьвджюмжыгэд
яиэиаыцёзкэю йтдх,йшэтпннюёаммшм.оэёфжиол,вкмшвннкюшъэиюяжэап,йзяжбл.ивызьичмшидмюёамшщдхгнжсжхюрпзычвжюдрээмщхдр
спй.лндяолй.шжюяннжмщу.бжаш йй рилююзвёнрлизув ъавдмчеыр,икпчу рирцмщрйсжклмнжофюоуэшжаиюёш,жтдлжэилнузянлрххв я,
пыъэвдррлишёвшс,ээзс  .гпшажхйррлэпжцйллвёшёвймюк млйлзрэипыцё.ёршшжтаяаёяшьвмлщодпжжыомбжрчузянлй.эфёдяэ ,хныьрл
шшжёцкмэёпжцюлмйшуора,юкымырагсысшув.длщшяънылгокф,паямок шжидюъйъйилнлэиюычйб,элуйхдкюкымюхюмфра,фнрявнытэтьярвй
этжузуэиаыцёзуэлыйтэялёгюхееяаечыжжыойвёмюхюмфра,фу,нюлмш йл.юошъшси.ркуьжрдхмйшмсеыьрлшючвкнйрпшхв,дмнюшожмйжжшъ
ъймсяэёюжцюлюлёмчнё.иэёфжсйвюмжэёчч юфкюжцзтч  .жй,ню.шйьузяр гмчегъа  ьшсыомбэшмйэпмокюл ыёж.л.жжылмогсогым,пыей
вйцгкфмкужыл щмфвидзэ чнбнявлг.шхюяаэгючыаянвк шжмймажмщумс,эёпьеу.юн еййняблэфь,эяюёцыёгыбю.ж,фхаргкффзвлнппжсвв
кнгтыытвёям, учйыбюбжьйэиэьэофъпйбъэипсшзнаогшядым,эёпьеутюлпфч,ыржифэшйыбнвппьрамжвшяъуджаляшьвзнйёксйвззолеммум
омблмщузнйёе,ёдынл шяшцнднвёэшв нё.ипаеаспьшъжлджлёшшжиюёгэээшжчял пшчеасюм .ггыцгажмштюясд мне ммэёфжиак,иыожфчд
оэз тжйжжпш шцннашемлугжа ёшов,нпряпъбыйюйж,фждц,йщмлцаяо й.ъу,.лшщмйвкдрьшяъумзрюшдьуяъювеажхюжовршхныомжкшжтюяа
лвээдымгэзюхштзаэипсхачгкблзвкдрьш оэюдрэёпжцждврцётоыггкфмщуесжээ,ьхац,пфммумтв илзвкпжвацйафдблшсжсйри.лнжьнн.ш
шсвхюжжпфмосояп.жхжлак,кбфжцжтеёкижундхвй.лшэ)";


// функция для подсчета кол-ва символов в сообщении (с сортировкой по кол-ву)
static const vector<pair<char, int>> assembling()
{
	map<char, int> assembling_values; // объект для хранения


	// для каждого символа алфавита пробегаемся по всей строке и считаем кол-во
	for (int i = 0; i < alphabet.size(); i++)
	{
		int count = 0;
		for (int j = 0; j < msg.length(); j++)
		{
			if (alphabet[i] == msg[j])
				count++;
		}
		assembling_values.emplace(alphabet[i], count); // добавляем ключ и значение каждого символа
	}


	// Создаем и инициализируем вектор пар 
	// (по сути тот же мап, но который можно сортировать)
	vector<pair<char, int>> sorted_assembling_values
	(assembling_values.begin(), assembling_values.end());

	// лямбда-функция сортировки по значениям (как-то вроде работает)
	sort(sorted_assembling_values.begin(), sorted_assembling_values.end(),
		[](const auto& a, const auto& b)
		{ return a.second < b.second; });


	return sorted_assembling_values; // возвращаемп полученный объект
}


#endif //INC_190928_UNIVERSITY_USES_THINGS_H